#!/bin/bash

# PandaServer utility script. Manage files using this script.
# To get started, run this script in the terminl: panda-manager --help

# Project version
version="1.0.0"
repo_baseurl="https://github.com/asiangoldfish/PandaServer"

# Global variables
SCRIPT_PATH="$(dirname "$0")"  # The path to this script

# Checks if a command is available
verify_cmd() {
    echo "Error 2: Command ${1} not found."
}

download_server() {
    # Enables user to quickly download file server.py in case the file is missing

    # Checks if file already exists, prompts user to continue if file was found
    if [ -f ./server.py ]; then
        read -r -p "Found server.py already exists. Continue? [y/N] " input
 
        case $input in
            [yY][eE][sS]|[yY])
                echo ""
                ;;
            *)
                return
                ;;
        esac
    fi

    # Check if curl is installed on the system
    command -v "curl" &> /dev/null || verify_cmd "curl" return

    # Pings to check if the script is still available
    serverpy_url="https://raw.githubusercontent.com/asiangoldfish/PandaServer/main/server.py"
    if curl -s --head --request GET $serverpy_url | grep "HTTP/2 200" > /dev/null; then
        echo "Downloading file server.py from $serverpy_url"

        curl -o ./server.py $serverpy_url
        return 0
    else
        echo "Error 3: Could not find server.py in the remote repository"
        return 1
    fi    
}

###
# Functions
###

# Checks if the script is run from within the project directory. If not, then change directory
# to the project's repository
path_check() {
    # Args:
    #   project (str): changes to the project directory this hasn't already been done
    #   origin (str): changes back to the original directory before execution of this script
    project_dir="PandaServer"
    cwd="$(pwd)"
    cwd_dir="$(echo "$cwd" | rev | cut -d'/' -f 1 | rev)"

    if ! [[ $cwd_dir == "$project_dir" ]]; then
        cd "$SCRIPT_PATH" &> /dev/null || {
            printf "Could not find the path to this script\n"
            return 1
        }
    fi

    return 0
}

# Main script. Using a function here, enables usage or return statement
main(){

    # Help page
    usage() (
        echo "Usage: panda-manager [OPTION] [...args]
    
Utility tool for managing the Panda Server. Some commands require the script
to be run from within the project directory. These particular commands will run
checks if required.

Options:
    help, --help            help page for the Panda Server project
    version, --version      project version
    start [args]            launch the Panda Server
    download [args]         download server.py
    info [args]             additional info about the project

Commands may have sub-commands. To learn more about these, append the --help flag.
Example: panda-manager --start --help

Error Codes:
A detailed overview over all error codes can be found in docs/errors.md, or at
https://github.com/asiangoldfish/PandaServer/blob/main/docs/errors.md

This project is open-source under the GPLv3 license and can be found at
https://github.com/asiangoldfish/PandaServer"
        return 0
    )

    # Runs help message if no arguments were found
    if [ $# -eq 0 ]; then usage && return; fi

    # Checks for flags and runs accordingly
    for arg in "$@"; do
        case $arg in
        --help | help )
            usage
            return 0
            ;;
        --version | version )
            echo "${version}"
            return 0
            ;;
        start )
            # Checks if the script is run from within the project directory
            path_check || return 1            
            source "scripts/start.sh"
            return 0
            ;;
        download )
            # Checks if the script is run from within the project directory
            path_check || return 1
            source "scripts/download.sh" "$2"
            return 0
            ;;
        info )
            source "scripts/info.sh"
            return 0
            ;;
        * )
            printf "panda-manager: invalid argument %s\n" "$*"
            return 0
            ;;
        esac
    done

    return 1
}

# Run script
main "$@" || exit 1
